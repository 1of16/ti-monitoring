volumes:
  certbot-www:
  certbot-conf:
  appdata:
  pgdata:

services:
  db:
    image: timescale/timescaledb:latest-pg16
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
  ti-monitoring-web:
    build: .
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./notifications.json:/app/notifications.json
      - ./.env:/app/.env
      - appdata:/app/data
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    ports:
      - "8050:8050"

  ti-monitoring-cron:
    build: .
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./notifications.json:/app/notifications.json
      - appdata:/app/data
    environment:
      - PYTHONPATH=/app
      - DB_HOST=${POSTGRES_HOST:-db}
      - DB_PORT=${POSTGRES_PORT:-5432}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    command: ["python", "-u", "cron.py"]
    restart: unless-stopped
    depends_on:
      - db

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - certbot-www:/var/www/certbot
      - certbot-conf:/etc/letsencrypt
      - ./letsencrypt-config/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf:ro
      - ./letsencrypt-config/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem:ro
    ports:
      - "80:80"
      - "443:443"
    environment:
      - SSL_DOMAIN=${SSL_DOMAIN}
    depends_on:
      - ti-monitoring-web
    restart: unless-stopped
    command: /bin/sh -c "envsubst '$$SSL_DOMAIN' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-www:/var/www/certbot
      - certbot-conf:/etc/letsencrypt
    environment:
      - SSL_DOMAIN=${SSL_DOMAIN}
      - SSL_EMAIL=${SSL_EMAIL}
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'