volumes:
  certbot-www:
  certbot-conf:

services:
  ti-monitoring-web:
    build: .
    volumes:
      - ./data.hdf5:/app/data.hdf5
      - ./config.yaml:/app/config.yaml
      - ./notifications.json:/app/notifications.json
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    expose:
      - "8050"

  ti-monitoring-cron:
    build: .
    volumes:
      - ./data.hdf5:/app/data.hdf5
      - ./config.yaml:/app/config.yaml
      - ./notifications.json:/app/notifications.json
    environment:
      - PYTHONPATH=/app
    command: python cron.py
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - certbot-www:/var/www/certbot
      - certbot-conf:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    environment:
      - SSL_DOMAIN=${SSL_DOMAIN}
    depends_on:
      - ti-monitoring-web
    restart: unless-stopped
    command: /bin/sh -c "envsubst '$$SSL_DOMAIN' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-www:/var/www/certbot
      - certbot-conf:/etc/letsencrypt
    environment:
      - SSL_DOMAIN=${SSL_DOMAIN}
      - SSL_EMAIL=${SSL_EMAIL}
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'