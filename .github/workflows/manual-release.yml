name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (z.B. 1.2.3)'
        required: true
        type: string
      prerelease:
        description: 'Als Pre-Release erstellen'
        required: false
        type: boolean
        default: true
      create_tag:
        description: 'Git Tag erstellen'
        required: false
        type: boolean
        default: true

jobs:
  create-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create Git Tag
      if: ${{ github.event.inputs.create_tag == 'true' }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ github.event.inputs.version }}" -m "Release version ${{ github.event.inputs.version }}"
        git push origin "v${{ github.event.inputs.version }}"
        
    - name: Create Portable Build
      run: |
        pwsh -File .\scripts\build-portable.ps1 -Force
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: TI-Monitoring Portable v${{ github.event.inputs.version }}
        files: ti-monitoring-portable-*.zip
        prerelease: ${{ github.event.inputs.prerelease == 'true' }}
        generate_release_notes: true
        body: |
          ## TI-Monitoring Portable v${{ github.event.inputs.version }}
          
          ### 🚀 Windows Portable Build
          - ✅ Vollständig portable Windows-Anwendung
          - ✅ Automatische Service-Installation mit NSSM
          - ✅ Virtuelle Python-Umgebung enthalten
          - ✅ Umfassende Installationsanleitung
          
          ### 📦 Installation
          1. ZIP-Datei entpacken
          2. `install-service.cmd` als Administrator ausführen
          3. Web-Interface unter http://localhost:8050 aufrufen
          
          ### ✨ Features
          - 🔍 Automatische TI-Service-Überwachung
          - 🌐 Web-basierte Benutzeroberfläche
          - 📧 E-Mail und Telegram-Benachrichtigungen
          - 📊 Detaillierte Statistiken und Logs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
