volumes:
  ti-monitoring-data:
  ti-monitoring-logs:
  pgdata:

services:
  db:
    image: timescale/timescaledb:latest-pg16
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  ti-monitoring-web:
    build: .
    container_name: ti-monitoring-web
    volumes:
      - ti-monitoring-data:/app/data
      - ti-monitoring-logs:/app/logs
      - ./config.yaml:/app/config.yaml
      - ./notifications.json:/app/notifications.json
      - ./.env:/app/.env
    environment:
      - PYTHONPATH=/app
      - TZ=Europe/Berlin
    restart: unless-stopped
    ports:
      - "8050:8050"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ti-monitoring-cron:
    build: .
    container_name: ti-monitoring-cron
    volumes:
      - ti-monitoring-data:/app/data
      - ti-monitoring-logs:/app/logs
      - ./config.yaml:/app/config.yaml
      - ./notifications.json:/app/notifications.json
    environment:
      - PYTHONPATH=/app
      - TZ=Europe/Berlin
      - DB_HOST=${POSTGRES_HOST:-db}
      - DB_PORT=${POSTGRES_PORT:-5432}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    command: ["python", "-u", "cron.py"]
    restart: unless-stopped
    depends_on:
      - ti-monitoring-web
      - db
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
